<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lemon.mapper.OutboundOrderDetailsMapper">
  <resultMap id="BaseResultMap" type="com.lemon.domain.OutboundOrderDetails">
    <!--@mbg.generated-->
    <!--@Table outbound_order_details-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="sku_id" jdbcType="BIGINT" property="skuId" />
    <result column="out_count" jdbcType="INTEGER" property="outCount" />
    <result column="target_warehouse_id" jdbcType="INTEGER" property="targetWarehouseId" />
    <result column="target_warehouse_area_id" jdbcType="INTEGER" property="targetWarehouseAreaId" />
    <result column="target_warehouse_area_loca_id" jdbcType="INTEGER" property="targetWarehouseAreaLocaId" />
    <result column="outbound_order_id" jdbcType="BIGINT" property="outboundOrderId" />
    <result column="pick_status" jdbcType="INTEGER" property="pickStatus" />
    <result column="pick_emp_id" jdbcType="INTEGER" property="pickEmpId" />
    <result column="pick_time" jdbcType="TIMESTAMP" property="pickTime" />
    <result column="saas_id" jdbcType="VARCHAR" property="saasId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="is_del" jdbcType="INTEGER" property="isDel" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, sku_id, out_count, target_warehouse_id, target_warehouse_area_id, target_warehouse_area_loca_id, 
    outbound_order_id, pick_status, pick_emp_id, pick_time, saas_id, create_time, create_by, 
    update_time, update_by, is_del
  </sql>


    <select id="getPageAll" resultType="com.lemon.domain.vo.OutboundOrderPickingVo">
      SELECT DISTINCT
      sku.id,
      sku.title,
      sku.spu_id AS spuId,
      sku.code,
      od.id AS odId,
      od.max_count AS maxCount,
      od.out_count AS outCount,
      (od.max_count - od.out_count) AS pickingCount,
      od.weight,
      od.outbound_order_id AS outboundOrderId, -- 订单ID
      od.volume,
      od.create_time AS createTime,
      od.create_by AS createBy,
      od.pick_status,
      oo.customer_name AS customerName,
      oo.invoice_code AS invoiceCode
      FROM
      outbound_order_details od
      INNER JOIN outbound_order oo ON od.outbound_order_id = oo.id AND oo.status IN (2, 3) <!-- 添加status=2条件 -->
      LEFT JOIN sku ON od.sku_id = sku.id
      WHERE
      1 = 1
      <if test="invoiceCode != null and invoiceCode != ''">
        AND oo.invoice_code LIKE CONCAT('%', #{invoiceCode}, '%')
      </if>
      <if test="customerName != null and customerName != ''">
        AND oo.customer_name LIKE CONCAT('%', #{customerName}, '%')
      </if>
      <if test="title != null and title != ''">
        AND sku.title LIKE CONCAT('%', #{title}, '%')
      </if>
      <if test="pickStatus != null">
        AND od.pick_status = #{pickStatus}  <!-- 明细表状态条件 -->
      </if>
      ORDER BY od.create_time DESC


    </select>

</mapper>